
.o-code {
  border: none;
  padding: 0px;
  white-space:nowrap;
  font-family: monospace, -moz-fixed, sans-serif;
  font-size: 14px;
  color:$grey-color-dark;
  &--table {
    tbody {
      font-family: -moz-fixed;
      font-size: 0.8rem;
      color:$grey-color-dark;
    }
  }
  &__block {
    color:$grey-color-dark;
    font-family: monospace, -moz-fixed, sans-serif;
    white-space:nowrap;
    font-style: normal;
    font-size: 14px;
    border: 1px solid $grey-color-light;
    border-radius: 3px;
    padding: 8px 12px;
    overflow-x: auto;
    %vertical-rhythm {
      margin-bottom: $spacing-unit / 2;
    }
    blockquote {
      color:$grey-color-dark;
      font-style: normal;
      border-left-width:1px;
      border-left-style: dotted;
      border-left-color:lighten($brand-color,50%);
    }
    p, blockquote {
      font-size:inherit;
      margin-bottom: 0;
    }

    > code {
      border: 0;
      padding-right: 0;
      padding-left: 0;
    }
  }

  &__ph {
   @include badge(saturate($accent-color,20%),false);
   border: 1px dashed;
   border-radius: 4px;
   padding: 0px 4px;
  }
  $token: #{&}--token;
  #{$token}, &#{$token}  {
    border: 1px solid;
    border-radius: 4px;
    padding: 0px 4px;
  }
//Base for language-specific colors and modifiers
  @each $key, $value in $code-colors{
      @each $variant, $color in $value {
      $var1: #{&}--#{$key} &__#{$variant}; //block
      $var2:  #{&}--#{$key}#{&}__#{$variant}; //inline
      @at-root #{$var1}, #{$var2} {
          color: $color;

          @at-root #{$token $var1}, #{$token $var2}, #{$token}#{$var1}, #{$token}#{$var2} {
              @include badge($color);
              }
            }
          }
        }
// HTML+Razor overrides
&--razor {
  color: #000;
  background-color:code-color('razor','k');
  @at-root &.o-code__k{
      color: #000;
    &:before {
      content:"@"
    }
  }
}

}
